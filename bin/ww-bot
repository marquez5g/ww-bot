#!/usr/bin/env node

/**
 * Module dependencies.
 */
const fs = require('fs');
const path = require('path');
const http = require('http');
const debug = require('debug')('ww-bot:server');
const { WWBot, app } = require('../src/index');

const sessionFilename = process.env.WWBOT_SESSION;
if (!sessionFilename) {
  console.error('The WWBOT_SESSION environment variable must be set to the session filename');
  process.exit(1);
}

const wwbot = new WWBot(path.resolve(sessionFilename));

const handlersPath = path.join(__dirname, '..', 'src/handlers');
const handlersFilename = fs.readdirSync(handlersPath, {});

// Loads all handlers
handlersFilename.forEach((filename) => {
  debug('loading', filename);

  // eslint-disable-next-line global-require
  const HandlerClass = require(path.join(handlersPath, filename));
  const handler = new HandlerClass();

  // Add handler
  wwbot.addHandler(handler, () => {
    debug('module', filename, 'loaded');
  });
});

// Config the web server
const port = process.env.PORT || 3000;
app.set('port', port);

// Add path to send message
app.get('/sendMessage', async (req, res) => {
  if (!req.query.chatId || !req.query.text) {
    return res.json({ ok: false, message: 'missing data' });
  }

  try {
    const message = wwbot.client.sendMessage(req.query.chatId, req.query.text);
    return res.json({ ok: true, id: message.id });
  } catch (e) {
    return res.json({ ok: false, message: e });
  }
});

// Handler errors
app.use('/', (req, res) => res.json({ ok: false, message: 'missing method' }));

// Create the web server
const server = http.createServer(app);

// Start the server
server.listen(port);
server.on('listening', () => {
  console.log('Listening on', port);
});

// Start the whatsapp web client
debug('app initialized');
wwbot.start();
